apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    app.kubernetes.io/name: "{{ .Chart.Name }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: "{{ .Chart.Name }}"
    app.kubernetes.io/part-of: "momo-store"
spec:
  replicas: {{ .Values.global.replicaCount }}
  revisionHistoryLimit: {{ .Values.global.revisionHistoryLimit }}
  # Стратегия развёртывания. Recreate — удалит сначала все старые Pod'ы
  # Есть и более гибкая стратегии, например, RollingUpdate,
  #  которая будет обновлять Pod'ы порциями
  strategy: {{ toYaml .Values.strategy | nindent 4 }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8081"
        prometheus.io/scrape: "true"
      labels:
        app: {{ .Chart.Name }}
    # шаблон для создания Pod'ов
    spec:
      containers:
      - image: "{{ .Values.image.repository }}:{{.Values.image.tag }}"
        name: {{ .Chart.Name }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env: {{ toYaml .Values.env | nindent 10 }}          
        ports:
        - name: {{ .Chart.Name }}
          containerPort: {{ .Values.service.port }}
        livenessProbe: {{ toYaml .Values.livenessProbe | nindent 10 }}
      # чтобы Кубер мог скачивать образы из нашего GitLab Registry
      imagePullSecrets:
      - name: gitlab-cr-secret
